{"version":3,"sources":["components/Formulario.js","App.js","reportWebVitals.js","index.js"],"names":["Formulario","useState","nombre","apellido","rut","correo","cita","setCita","error","setError","actualizarState","e","target","name","value","className","onSubmit","preventDefault","trim","console","log","type","placeholder","onChange","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+OAoGeA,EAlGI,WAEnB,MAAwBC,mBAAS,CAC7BC,OAAO,GACPC,SAAU,GACVC,IAAI,GACJC,OAAO,KAJX,mBAAOC,EAAP,KAAaC,EAAb,KAOA,EAA0BN,oBAAS,GAAnC,mBAAOO,EAAP,KAAcC,EAAd,KAEMC,EAAkB,SAAAC,GAIvBJ,EAAQ,2BACDD,GADA,kBAEFK,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UAIxBZ,EAAkCI,EAAlCJ,OAAQC,EAA0BG,EAA1BH,SAAUC,EAAgBE,EAAhBF,IAAKC,EAAWC,EAAXD,OAsB9B,OAAS,eAAC,WAAD,WACD,mDACCG,EAAS,oBAAGO,UAAU,eAAb,yEAAoE,uBAApE,uCAAiH,KAC3H,uBACAC,SAxBW,SAAAL,GAInB,GAHIA,EAAEM,iBAGc,KAAjBf,EAAOgB,QAAmC,KAAnBf,EAASe,QAA8B,KAAdd,EAAIc,QAAiC,KAAjBb,EAAOa,OAGzE,OAFAC,QAAQC,IAAI,kCACdX,GAAS,GAGZA,GAAS,GACTU,QAAQC,IAAR,iBAAsBd,EAAKJ,OAA3B,sBAA+CI,EAAKH,SAApD,kBAAsEG,EAAKF,IAA3E,qBAA2FE,EAAKD,OAAhG,MAGCE,EAAS,CACNL,OAAO,GACPC,SAAU,GACVC,IAAI,GACJC,OAAO,MAMH,UAGI,2CACA,uBACAgB,KAAM,OACNR,KAAK,SACLE,UAAU,eACVO,YAAY,yBACZC,SAAUb,EACVI,MAAOZ,IAEL,6CACF,uBACAmB,KAAM,OACNR,KAAK,WACLE,UAAU,eACVO,YAAY,2BACZC,SAAUb,EACVI,MAAOX,IAGX,wCACI,uBACAkB,KAAM,SACNR,KAAK,MACLE,UAAU,eACVO,YAAY,sBACZC,SAAUb,EACVI,MAAOV,IAIX,0CACI,uBACAiB,KAAM,QACNR,KAAK,SACLE,UAAU,eACVO,YAAY,wBACZC,SAAUb,EACVI,MAAOT,IAGP,wBACAgB,KAAK,SACLN,UAAU,8BAFV,4BC5EGS,MAZf,WACE,OACE,eAAC,WAAD,WACD,iEACA,qBAAKT,UAAW,YAAhB,SAEH,cAAC,EAAD,UCGeU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6b3b82b0.chunk.js","sourcesContent":["import React, {Fragment, useState} from 'react';\n//import uuid from 'uuid/v4'\nconst Formulario = () => {\n\nconst [cita, setCita] = useState({\n    nombre:'',\n    apellido: '',\n    rut:'',\n    correo:''\n})\n\nconst [error, setError] = useState(false)\n\nconst actualizarState = e =>{\n //   console.log('escribiendo... ')\n //console.log(e.target.name)\n //console.log(e.target.value)\n setCita({\n     ...cita, \n     [e.target.name]: e.target.value\n })\n}\n\nconst {nombre, apellido, rut, correo } = cita \n\nconst submitCita = e  =>{\n    e.preventDefault();\n //   console.log('enviando form')\n //Validacion\nif(nombre.trim()=== '' || apellido.trim()=== '' || rut.trim()=== '' || correo.trim()=== '' ){\n     console.log('Completa todos los campos')\n   setError(true);\n     return;\n}\nsetError(false);\nconsole.log(`Nombre:${cita.nombre}, Apellido:${cita.apellido}, RUT: ${cita.rut}, Correo: ${cita.correo} ` );\n\n // Reiniciar el formulario\n setCita ({\n    nombre:'',\n    apellido: '',\n    rut:'',\n    correo:''\n })\n}\nreturn ( <Fragment>\n        <h2>AÃ±adir persona</h2>\n        {error ?  <p className='alerta-error'>ðŸ˜¢ Todos los campos son obligatorios ðŸ˜¢ <br/> Por favor completa el formulario</p> : null}\n        <form\n        onSubmit={submitCita}\n        >\n            <label>Nombre</label>\n            <input \n            type= 'text'\n            name='nombre'\n            className='u-full-width'\n            placeholder='Escribe el nombre aqui'\n            onChange={actualizarState}\n            value={nombre}\n            />\n              <label>Apellido</label>\n            <input \n            type= 'text'\n            name='apellido'\n            className='u-full-width'\n            placeholder='Escribe el apellido aqui'\n            onChange={actualizarState}\n            value={apellido}\n            />\n\n        <label>RUT</label>\n            <input \n            type= 'number'\n            name='rut'\n            className='u-full-width'\n            placeholder='Escribe el RUT aqui'\n            onChange={actualizarState}\n            value={rut}\n\n            />\n\n        <label>Email</label>\n            <input \n            type= 'email'\n            name='correo'\n            className='u-full-width'\n            placeholder='Escribe el email aqui'\n            onChange={actualizarState}\n            value={correo}\n            />\n\n            <button \n            type='submit'\n            className='u-full-width button-primary'\n            \n            >Agregar</button>\n        </form>\n    </Fragment> );\n}\n \nexport default Formulario;","import React, {Fragment} from 'react';\nimport Formulario from './components/Formulario';\n\nfunction App() {\n  return (\n    <Fragment>\n   <h1>Postulacion Kevin para Altercap</h1>\n   <div className= 'container' >\n \n<Formulario/>\n   </div>\n    </Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}